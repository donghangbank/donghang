/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 resources/models/avatar.glb -o src/renderer/src/components/banker/Avatar.tsx -r public
*/

import * as THREE from "three";
import React, { forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useGraph } from "@react-three/fiber";
import { SkeletonUtils } from "three-stdlib";
import avatar from "@renderer/assets/models/avatar.glb?url";

export const Avatar = forwardRef<THREE.Group, any>((props, ref) => {
	const { scene } = useGLTF(avatar);
	const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
	const { nodes, materials } = useGraph(clone);

	return (
		<group ref={ref} {...props} dispose={null}>
			<primitive object={nodes.Hips} />
			<skinnedMesh
				geometry={(nodes.Wolf3D_Hair as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Hair}
				skeleton={(nodes.Wolf3D_Hair as THREE.SkinnedMesh).skeleton}
			/>
			<skinnedMesh
				geometry={(nodes.Wolf3D_Body as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Body}
				skeleton={(nodes.Wolf3D_Body as THREE.SkinnedMesh).skeleton}
			/>
			<skinnedMesh
				geometry={(nodes.Wolf3D_Outfit_Bottom as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Outfit_Bottom}
				skeleton={(nodes.Wolf3D_Outfit_Bottom as THREE.SkinnedMesh).skeleton}
			/>
			<skinnedMesh
				geometry={(nodes.Wolf3D_Outfit_Footwear as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Outfit_Footwear}
				skeleton={(nodes.Wolf3D_Outfit_Footwear as THREE.SkinnedMesh).skeleton}
			/>
			<skinnedMesh
				geometry={(nodes.Wolf3D_Outfit_Top as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Outfit_Top}
				skeleton={(nodes.Wolf3D_Outfit_Top as THREE.SkinnedMesh).skeleton}
			/>
			<skinnedMesh
				name="EyeLeft"
				geometry={(nodes.EyeLeft as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Eye}
				skeleton={(nodes.EyeLeft as THREE.SkinnedMesh).skeleton}
				morphTargetDictionary={(nodes.EyeLeft as THREE.SkinnedMesh).morphTargetDictionary}
				morphTargetInfluences={(nodes.EyeLeft as THREE.SkinnedMesh).morphTargetInfluences}
			/>
			<skinnedMesh
				name="EyeRight"
				geometry={(nodes.EyeRight as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Eye}
				skeleton={(nodes.EyeRight as THREE.SkinnedMesh).skeleton}
				morphTargetDictionary={(nodes.EyeRight as THREE.SkinnedMesh).morphTargetDictionary}
				morphTargetInfluences={(nodes.EyeRight as THREE.SkinnedMesh).morphTargetInfluences}
			/>
			<skinnedMesh
				name="Wolf3D_Head"
				geometry={(nodes.Wolf3D_Head as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Skin}
				skeleton={(nodes.Wolf3D_Head as THREE.SkinnedMesh).skeleton}
				morphTargetDictionary={(nodes.Wolf3D_Head as THREE.SkinnedMesh).morphTargetDictionary}
				morphTargetInfluences={(nodes.Wolf3D_Head as THREE.SkinnedMesh).morphTargetInfluences}
			/>
			<skinnedMesh
				name="Wolf3D_Teeth"
				geometry={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).geometry}
				material={materials.Wolf3D_Teeth}
				skeleton={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).skeleton}
				morphTargetDictionary={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).morphTargetDictionary}
				morphTargetInfluences={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).morphTargetInfluences}
			/>
		</group>
	);
});

Avatar.displayName = "Avatar";

useGLTF.preload(avatar);
