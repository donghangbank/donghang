plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.google.cloud.tools.jib' version '3.4.4'
}

group = 'bank.donghang'
version = '0.2.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

var querydslDir = file("build/generated/querydsl")

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Spring REST Docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Querydsl dependencies
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    //s3
    implementation("software.amazon.awssdk.crt:aws-crt:0.33.2")
    implementation("io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1")
    implementation("software.amazon.awssdk:s3:2.29.18")

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.45.1'

    //hibernate
    implementation 'org.hibernate.orm:hibernate-spatial:6.2.9.Final'
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    inputs.dir snippetsDir
    baseDirFollowsSourceFile()
    configurations 'asciidoctorExt'
    dependsOn test
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

tasks.named('compileJava') {
    doLast {
        println("Querydsl QClasses will be generated in: ${file('build/generated/querydsl')}")
    }
}

tasks.compileJava {
    options.annotationProcessorGeneratedSourcesDirectory = querydslDir
}

checkstyle {
    maxWarnings = 0
    configFile = file('config/checkstyle/naver-checkstyle-rules.xml')
    configProperties = ['checkstyle.suppressions.file': 'config/checkstyle/naver-checkstyle-suppressions.xml']
    toolVersion = '10.19.0'
}

checkstyleMain.source = fileTree('src/main/java')
checkstyleTest.source = fileTree('src/test/java')

sourceSets {
    main {
        java {
            srcDir querydslDir
        }
    }
}

jib {
    from {
        image = 'amazoncorretto:17-alpine-jdk'
    }
    to {
        tags = ['latest', "${project.version}".toString()]
        credHelper = 'ecr-login'
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-XX:+UseContainerSupport', '-Dspring.profiles.active=prod', '-Dserver.port=8080', '-Duser.timezone=Asia/Seoul', '-Dfile.encoding=UTF-8']
        ports = ['8080']
    }
}

tasks.named('jib') {
    dependsOn copyDocument
}
